//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsFeedclient.NewsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/NewsFeed")]
    [System.SerializableAttribute()]
    public partial class News : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthornameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] NewsImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authorname {
            get {
                return this.AuthornameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthornameField, value) != true)) {
                    this.AuthornameField = value;
                    this.RaisePropertyChanged("Authorname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsIDField, value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] NewsImage {
            get {
                return this.NewsImageField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsImageField, value) != true)) {
                    this.NewsImageField = value;
                    this.RaisePropertyChanged("NewsImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsService.IFeedService")]
    public interface IFeedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/AddNews", ReplyAction="http://tempuri.org/IFeedService/AddNewsResponse")]
        string AddNews(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/AddNews", ReplyAction="http://tempuri.org/IFeedService/AddNewsResponse")]
        System.Threading.Tasks.Task<string> AddNewsAsync(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/GetNews", ReplyAction="http://tempuri.org/IFeedService/GetNewsResponse")]
        System.Data.DataSet GetNews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/GetNews", ReplyAction="http://tempuri.org/IFeedService/GetNewsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/DeleteNews", ReplyAction="http://tempuri.org/IFeedService/DeleteNewsResponse")]
        string DeleteNews(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/DeleteNews", ReplyAction="http://tempuri.org/IFeedService/DeleteNewsResponse")]
        System.Threading.Tasks.Task<string> DeleteNewsAsync(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/SearchNewsRecord", ReplyAction="http://tempuri.org/IFeedService/SearchNewsRecordResponse")]
        System.Data.DataSet SearchNewsRecord(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/SearchNewsRecord", ReplyAction="http://tempuri.org/IFeedService/SearchNewsRecordResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchNewsRecordAsync(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/UpdateNews", ReplyAction="http://tempuri.org/IFeedService/UpdateNewsResponse")]
        string UpdateNews(NewsFeedclient.NewsService.News nw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedService/UpdateNews", ReplyAction="http://tempuri.org/IFeedService/UpdateNewsResponse")]
        System.Threading.Tasks.Task<string> UpdateNewsAsync(NewsFeedclient.NewsService.News nw);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedServiceChannel : NewsFeedclient.NewsService.IFeedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedServiceClient : System.ServiceModel.ClientBase<NewsFeedclient.NewsService.IFeedService>, NewsFeedclient.NewsService.IFeedService {
        
        public FeedServiceClient() {
        }
        
        public FeedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddNews(NewsFeedclient.NewsService.News nw) {
            return base.Channel.AddNews(nw);
        }
        
        public System.Threading.Tasks.Task<string> AddNewsAsync(NewsFeedclient.NewsService.News nw) {
            return base.Channel.AddNewsAsync(nw);
        }
        
        public System.Data.DataSet GetNews() {
            return base.Channel.GetNews();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNewsAsync() {
            return base.Channel.GetNewsAsync();
        }
        
        public string DeleteNews(NewsFeedclient.NewsService.News nw) {
            return base.Channel.DeleteNews(nw);
        }
        
        public System.Threading.Tasks.Task<string> DeleteNewsAsync(NewsFeedclient.NewsService.News nw) {
            return base.Channel.DeleteNewsAsync(nw);
        }
        
        public System.Data.DataSet SearchNewsRecord(NewsFeedclient.NewsService.News nw) {
            return base.Channel.SearchNewsRecord(nw);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchNewsRecordAsync(NewsFeedclient.NewsService.News nw) {
            return base.Channel.SearchNewsRecordAsync(nw);
        }
        
        public string UpdateNews(NewsFeedclient.NewsService.News nw) {
            return base.Channel.UpdateNews(nw);
        }
        
        public System.Threading.Tasks.Task<string> UpdateNewsAsync(NewsFeedclient.NewsService.News nw) {
            return base.Channel.UpdateNewsAsync(nw);
        }
    }
}
